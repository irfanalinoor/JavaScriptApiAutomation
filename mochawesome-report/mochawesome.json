{
  "stats": {
    "suites": 6,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2019-02-02T18:33:18.409Z",
    "end": "2019-02-02T18:33:27.225Z",
    "duration": 8816,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "17ee311a-6a4f-4bd2-a411-506be6b30286",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "f66c3fda-b12c-4514-a9e5-f7d560af5925",
        "title": "Current Weather Data API - Test Suite",
        "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\JavaScriptApiAutomation\\specs\\Test_GetCurrentWeather.js",
        "file": "\\specs\\Test_GetCurrentWeather.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "4f32f4d0-2a7e-449e-aaae-417406bbd4b1",
            "title": "Basic Shakedown Tests",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\JavaScriptApiAutomation\\specs\\Test_GetCurrentWeather.js",
            "file": "\\specs\\Test_GetCurrentWeather.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify 'Current Weather By GPS Coordinates' Api response is OK",
                "fullTitle": "Current Weather Data API - Test Suite Basic Shakedown Tests Verify 'Current Weather By GPS Coordinates' Api response is OK",
                "timedOut": false,
                "duration": 1676,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testData = data.BaseURL+'current/?lat=0&lon=0&key='+data.ApiKey;\nconsole.log(\"Running Test for Current Weather By GPS Coordinates \"+testData);\n\ncurrentResponse = await Get_CurrentByGPSCoordinates(testData);\nexpect(currentResponse.statusCode).to.equal(200);\n\ncurrentResponseBody = JSON.parse(currentResponse.body);\n     \nexpect(currentResponseBody.data).to.be.an('array');",
                "err": {},
                "isRoot": false,
                "uuid": "3986ccfa-ed59-4f05-a181-e8fe7d4b4a4a",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "3986ccfa-ed59-4f05-a181-e8fe7d4b4a4a"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1676,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          },
          {
            "uuid": "9e791e82-40bc-437b-8303-4c9828f6600f",
            "title": "Functional Tests",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\JavaScriptApiAutomation\\specs\\Test_GetCurrentWeather.js",
            "file": "\\specs\\Test_GetCurrentWeather.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify STATE CODE is displayed in response of 'Current Weather By GPS Coordinates' Api",
                "fullTitle": "Current Weather Data API - Test Suite Functional Tests Verify STATE CODE is displayed in response of 'Current Weather By GPS Coordinates' Api",
                "timedOut": false,
                "duration": 1528,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testData = data.BaseURL+'current/?lat='+data.Current.Lat+'&lon='+data.Current.Lon+'&key='+data.ApiKey;\nconsole.log(\"Running Test for Current Weather By GPS Coordinates \"+testData);\n\ncurrentResponse = await Get_CurrentByGPSCoordinates(testData);\nexpect(currentResponse.statusCode).to.equal(200);\n\ncurrentResponseBody = JSON.parse(currentResponse.body);\n\nexpect(currentResponseBody.data[0]).to.include.any.keys( 'state_code');",
                "err": {},
                "isRoot": false,
                "uuid": "22c95c3f-0320-4aeb-a14a-4b6551c21457",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "22c95c3f-0320-4aeb-a14a-4b6551c21457"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1528,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 30000
      },
      {
        "uuid": "39a8702a-5992-4e71-a55c-4d013422369d",
        "title": "Forecast Weather Data API - Test Suite",
        "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\JavaScriptApiAutomation\\specs\\Test_GetForecastWeather.js",
        "file": "\\specs\\Test_GetForecastWeather.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "1177f7e3-7f57-4e28-82e6-3819eaad541c",
            "title": "Basic Shakedown Tests",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\JavaScriptApiAutomation\\specs\\Test_GetForecastWeather.js",
            "file": "\\specs\\Test_GetForecastWeather.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify 'Forecast - 3 Hourly Data' Api response is OK",
                "fullTitle": "Forecast Weather Data API - Test Suite Basic Shakedown Tests Verify 'Forecast - 3 Hourly Data' Api response is OK",
                "timedOut": false,
                "duration": 1836,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testData = data.BaseURL+'forecast/3hourly?postal_code=28546&key='+data.ApiKey;\nconsole.log(\"Running Test for Forecast by Postal Code\"+testData);\n\nforecastResponse = await Get_ForecastByPostalCode(testData);\nexpect(forecastResponse.statusCode).to.equal(200);\n\nforecastResponseBody = JSON.parse(forecastResponse.body);\n     \nexpect(forecastResponseBody.data).to.be.an('array');",
                "err": {},
                "isRoot": false,
                "uuid": "4587f62d-58c7-41b8-9dd1-6ce9390ec3fa",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4587f62d-58c7-41b8-9dd1-6ce9390ec3fa"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 1836,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          },
          {
            "uuid": "714f4e94-9705-4c40-b49b-f3ece657d09a",
            "title": "Functional Tests",
            "fullFile": "C:\\Users\\L119466\\Downloads\\Test\\JavaScriptApiAutomation\\specs\\Test_GetForecastWeather.js",
            "file": "\\specs\\Test_GetForecastWeather.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "Verify response of 'Forecast Weather By Postal Code' Api have value of TIMESTAMP UTC",
                "fullTitle": "Forecast Weather Data API - Test Suite Functional Tests Verify response of 'Forecast Weather By Postal Code' Api have value of TIMESTAMP UTC",
                "timedOut": false,
                "duration": 1776,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testData = data.BaseURL+'forecast/3hourly?postal_code='+data.Forecast3Hourly.Postal_Code+'&key='+data.ApiKey;\n\nconsole.log(\"Running Test for Forecast by Postal Code\"+testData);\nforecastResponse = await Get_ForecastByPostalCode(testData);\nexpect(forecastResponse.statusCode).to.equal(200);\n\nforecastResponseBody = JSON.parse(forecastResponse.body);\n\nfor(var i = 0; i < forecastResponseBody.data.length; i++) {\n    var dataObj = forecastResponseBody.data[i];\n\n    expect(dataObj).to.include.any.keys('timestamp_utc');\n    // console.log(\"timestamp_utc = \"+dataObj.timestamp_utc);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "4f713313-a8be-4dd1-9dad-9dd0beaeb56d",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "Verify response of 'Forecast Weather By Postal Code' Api have value of WEATHER",
                "fullTitle": "Forecast Weather Data API - Test Suite Functional Tests Verify response of 'Forecast Weather By Postal Code' Api have value of WEATHER",
                "timedOut": false,
                "duration": 1955,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "testData = data.BaseURL+'forecast/3hourly?postal_code='+data.Forecast3Hourly.Postal_Code+'&key='+data.ApiKey;\nconsole.log(\"Running Test for \"+testData);\n\nforecastResponse = await Get_ForecastByPostalCode(testData);\nexpect(forecastResponse.statusCode).to.equal(200);\n\nforecastResponseBody = JSON.parse(forecastResponse.body);\n\nfor(var i = 0; i < forecastResponseBody.data.length; i++) {\n    var dataObj = forecastResponseBody.data[i];\n\n    expect(dataObj.weather).to.include.any.keys('icon','code','description');\n    \n    // console.log(\"weather = \"+dataObj.weather);\n}",
                "err": {},
                "isRoot": false,
                "uuid": "ddfcec59-463c-42f5-b115-151a2171a8dc",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "4f713313-a8be-4dd1-9dad-9dd0beaeb56d",
              "ddfcec59-463c-42f5-b115-151a2171a8dc"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 3731,
            "root": false,
            "rootEmpty": false,
            "_timeout": 30000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 30000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2019
}